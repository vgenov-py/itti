{
    "questions": [
        {"question": "What is the expected output of the following code?\n\nx = [0, 1, 2]\nx.insert(0, 1)   \ndel x[1]\nprint(sum(x))", 
        "options": [
        "A: 5",
        "B: 4",
        "C: 3",
        "D: 2"
    ],
        "answer": "B: 4",
        "family" : "pcep",
        "subject": "Data Aggregates"
       
    },
      
    {
        "question": "You develop a Python application for your company. You have the following code.\n\ndef main(a, b, c, d):\n    value = a + b * c - d\n    return value\n\nWhich of the following expressions is equivalent to the expression in the function?",
        "options": ["A: (a + (b * c) - d)", "B: None of the above", "C: (a + b) * (c - d)", "D: a + ((b * c)) - d"],
        "answer": "A: (a + (b * c) - d)",
        "family": "pcep",
        "subject": "Operators"
    },
    {
        "question": "What will happen when you attempt to run the following code?\n\nprint(Hello, World!)",
        "options": [
            "A: The code will raise the SyntaxError exception",
            "B: The code will print Hello, World! to the console",
            "C: The code will raise the TypeError exception",
            "D: The code will raise the ValueError exception",
            "E: The code will raise the AttributeError exception"
        ],
        "answer": "A: The code will raise the SyntaxError exception",
        "family" : "pcep",
        "subject": "Error Handling"
    },
    {
        "question": "What is the output of the following code snippet?\n\ndef test(x=1, y=2):\nx = x + y\ny += 1\nprint(x, y)\n\ntest(2, 1)",
        "options": ["A. 3 3", "B. 1 3", "C. The code is erroneous", "D. 3 2", "E. 2 3"],
        "answer": "D. 3 2",
        "family" : "pcep",
        "subject": "Functions"
    },
    {
        "question": "Take a look at the snippet,and choose the true statements:\n\nnums = [1, 2, 3]\nvals = nums\ndel vals[1:2]",
        "options": [
            "A. nums and vals are of the same length",
            "B. nums and vals refer to the same list",
            "C. nums is no longer than vals",
            "D. vals is longer than nums"
        ],
        "answer": "A. nums and vals are of the same length\nB. nums and vals refer to the same list",
        "family" : "pcep",
        "subject": "Data Aggregates"
    },
    {
        "question": "The value thirty point eleven times ten raised to the power of nine should be written as:",
        "options": ["A. 30.11*10^9", "B. 30.11E9.0", "C. 30E11.9", "D. 30.11E9"],
        "answer": "D. 30.11E9",
        "family" : "pcep",
        "subject": "Data Types"
    },
    {
        "question": "What is the expected output of the following code?\n\nnum = 1\ndef func():\nnum = num + 3\nprint(num)\n\nfunc()",
        "options": ["A. 4 1", "B. The code is erroneous", "C. 4 4", "D. 1 4", "E. 1 1"],
        "answer": "B. The code is erroneous",
        "family" : "pcep",
        "subject": "Functions"
    },
    {
        "question": "What is the expected behavior of the following program?\n\ntry:\nprint(5/0)\nbreak\nexcept:\nprint('Sorry, something went wrong...')\nexcept (ValueError, ZeroDivisionError):\nprint('Too bad...')",
        "options": [
            "A. The program will raise an exception handled by the first except block",
            "B. The program will cause a ValueError exception and output the following message: 'Too bad..'",
            "C. The program will cause a ValueError exception and output a default error message",
            "D. The program will cause a ZeroDivisionError exception and output a default error message",
            "E. The program will raise an exception handled by the second except block"
        ],
        "answer": "E. The program will raise an exception handled by the first except block",
        "family" : "pcep",
        "subject": "Error Handling"
    },

            {
        "question": "The 0o prefix means that the number after it is denoted as:",
        "options": [
            "A: binary",
            "B: decimal",
            "C: hexadecimal",
            "D: octal"
        ],
        "answer": "D: octal",
        "family" : "pcep",
        "subject": "Data Types"
    },
    {
        "question": "How many stars will the following code print to the monitor?\ni = 0\nwhile i <= 3:\n    i += 2\n    print('*')",
        "options": [
            "A: zero",
            "B: three",
            "C: one",
            "D: two"
        ],
        "answer": "D: two",
        "family" : "pcep",
        "subject": "Control Flow"
    },
    {
        "question": "Insert the correct snippet so that the program produces the expected output.\nExpected output: True\n\nCode:\nlist = [False, True, '2', 3, 4, 5]\ninsert code here\nprint(b)",
        "options": [
            "A: b = 0 not in list",
            "B: b = False",
            "C: b = 0 in list",
            "D: b = list[0]"
        ],
        "answer": "C: b = 0 in list",
        "family" : "pcep",
        "subject": "Data Aggregates"
    },

    {
        "question": "What is the expected output of the following code?\ndef func(x):\nreturn 1 if x % 2 != 0 else 2\n\nprint(func(func(1)))",
        "options": ["A: 2", "B: The code is erroneous", "C: 1", "D: None"],
        "answer": "C: 1",
        "family" : "pcep",
        "subject": "Control Flow"
    },
    {
        "question": "What is the expected output of the following code?\ndata = ['Peter', 404, 3.03, 'Wellert', 33.3]\nprint(data[1:3])",
        "options": ["A: [404, 3.03]", "B: None of the above", "C: ['Peter', 404, 3.03, 'Wellert', 33.3]", "D: ['Peter', 'Wellert']"],
        "answer": "A: [404, 3.03]",
        "family" : "pcep",
        "subject": "Data Aggregates"
    },
    {
        "question": "What will be the output of the following code snippet?\nx = 2\ny = 1\nx *= y + 1\nprint(x)",
        "options": ["A: 4", "B: None", "C: 2", "D: 3", "E: 1"],
        "answer": "A: 4",
        "family" : "pcep",
        "subject": "Operators"
    },
    {
        "question": "What is the expected output of the following code?\ndef func(text, num):\nwhile num > 0:\nprint(text)\nnum = num - 1\n\nfunc('Hello', 3)",
        "options": [
            "A: Hello\nHello\nHello\nHello",
            "B: An infinite loop",
            "C: Hello\nHello\nHello",
            "D: Hello"
        ],
        "answer": "B: An infinite loop",
        "family" : "pcep",
        "subject": "Control Flow"
    },
    {
        "question": "x = True\ny = False\nz = False\nif not x or y:\n    print(1)\nelif not x or not y and z:\n    print(2)nelif not x or y or not y and x:\n    print(3)\nelse:\n    print(4)",
        "options": ["A: 1", "B: 3", "C: 2", "D: 4"],
        "answer": "B: 3",
        "family" : "pcep",
        "subject": "Control Flow"
    },
    {
        "question": "A function definition starts with the keyword:\nA. def\nB. function\nC. fun",
        "options": ["A: def", "B: function", "C: fun"],
        "answer": "A: def",
        "family" : "pcep",
        "subject": "Functions"
    },
    {
        "question": "What is the expected output of the following code?\n3x = 1 / 2 + 3 // 3 + 4 ** 2\nprint(x)",
        "options": ["A. 8.5", "B. 8", "C. 17","D. 17.5"],
        "answer": "D. 17.5",
        "family" : "pcep",
        "subject": "Operators"
    },
    {
        "question": "What is the expected output of the following code?\nx = 1\ny = 2\nx, y, z = x, x, y\nz, y, z = x, y, z\nprint(x, y, z)",
        "options": ["A: 1 1 2", "B: 2 1 2", "C: 1 2 2", "D: 1 2 1"],
        "answer": "A: 1 1 2",
        "family" : "pcep",
        "subject": "Basics"
    },
    {
        "question": "What is the expected output of the following code?\nlist1 = [1, 3]\nlist2 = list1\nlist1[0] = 4\nprint(list2)",
        "options": ["A: [1, 3]", "B: [1, 3, 4]", "C: [1, 4]", "D: [4, 3]"],
        "answer": "D: [4, 3]",
        "family" : "pcep",
        "subject": "Data Aggregates"
    },
    {
        "question": "What will be the output of the following code snippet?\na = [1, 2, 3, 4, 5, 6, 7, 8, 9]\nprint(a[::2])",
        "options": ["A: [1, 2]", "B: [1, 3, 5, 7, 9]", "C: [8, 9]", "D: [1, 2, 3]"],
        "answer": "B: [1, 3, 5, 7, 9]",
        "family" : "pcep",
        "subject": "Data Aggregates"
    },
    {
        "question": "What is the output of the following snippet?\ndictionary = {'one': 'two', 'three': 'one', 'two': 'three'}\nv = dictionary['one']\n\nfor k in range(len(dictionary)):\n    v = dictionary[v]\nprint(v)",
        "options": ["A: ('one', 'two', 'three')", "B: three", "C: two", "D: one"],
        "answer": "C: two",
        "family" : "pcep",
        "subject": "Data Aggregates"
    },
    {
        "question": "What is the output of the following snippet?\ndef fun(x, y, z):\n    return x + 2 * y + 3 * z\nprint(fun(0, z=1, y=3))",
        "options": ["A: 0", "B: 9", "C: 3", "D: The snippet is erroneous"],
        "answer": "B: 9",
        "family" : "pcep",
        "subject": "Functions"
    },
    {
        "question": "An operator able to check whether two values are not equal is coded as:",
        "options": ["A: not ==", "B: =/=", "C: <>", "D: !="],
        "answer": "D: !=",
        "subject": "Operators"
    },
    {
        "question": "Which of the following variable names are illegal?\n(Select two answers)",
        "options": ["A: TRUE", "B: True", "C: true", "D: and"],
        "answer": "B: True, D: and",
        "family" : "pcep",
        "subject": "Basics"
    },
    {
        "question": "What would you insert instead of ??? so that the program checks for even numbers?\n\nif ???:\n  print('x is an even number')",
        "options": ["A: x % 2 == 0", "B: x % 2 == 1", "C: x % 1 == 2", "D: x % x == 0", "E: x % 'even' == True"],
        "answer": "A: x % 2 == 0",
        "family" : "pcep",
        "subject": "Operators"
    },
    {
        "question": "What is the expected output of the following code?\n\ndef func(data):\nfor d in data[::2]:\nyield d \n\nfor x in func('abcdef'):\n    print(x, end='').",
        "options": ["A: bdf", "B: abcdef", "C: ace", "D: An empty line"],
        "answer": "C: ace",
        "family" : "pcep",
        "subject": "Functions"
    },
    {
        "question": "Python is an example of:",
        "options": ["A: a natural language", "B: a high-level programming language", "C: a machine language"],
        "answer": "B: a high-level programming language",
        "family" : "pcep",
        "subject": "Basics"
    },
    {
        "question": "What is the expected output of the following code?\n\ndef fun():\n    return True\nx = fun(False)\nprint(x)",
        "options": ["A: True", "B: False", "C: 1", "D: The program will cause an error"],
        "answer": "D: The program will cause an error",
        "family" : "pcep",
        "subject": "Functions"
    },
    {
        "question": "What value will be assigned to the x variable?\nz=3\ny=7\nx = y < z and z > y or y > z and z < y",
        "options": ["A: 1", "B: 0", "C: False", "D: True"],
        "answer": "D: True",
        "family" : "pcep",
        "subject": "Operators"
    }
	]
		
}